#
# In your Quartz properties file, you'll need to set
# org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#
#
# By: Ron Cordell - roncordell
#  I didn't see this anywhere, so I thought I'd post it here. This is the script from Quartz to create the tables in a MySQL database, modified to use INNODB instead of MYISAM.

DROP TABLE IF EXISTS QRTZ_FIRED_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;
DROP TABLE IF EXISTS QRTZ_SCHEDULER_STATE;
DROP TABLE IF EXISTS QRTZ_LOCKS;
DROP TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_JOB_DETAILS;
DROP TABLE IF EXISTS QRTZ_CALENDARS;

CREATE TABLE QRTZ_JOB_DETAILS(
	`SCHED_NAME` VARCHAR(120) NOT NULL COMMENT '计划名称',
	`JOB_NAME` VARCHAR(190) NOT NULL COMMENT '任务名称',
	`JOB_GROUP` VARCHAR(190) NOT NULL COMMENT '任务组',
	`DESCRIPTION` VARCHAR(250) NULL DEFAULT NULL COMMENT '描述',
	`JOB_CLASS_NAME` VARCHAR(250) NOT NULL COMMENT '任务程序类名',
	`IS_DURABLE` VARCHAR(1) NOT NULL COMMENT '是否持久',
	`IS_NONCONCURRENT` VARCHAR(1) NOT NULL COMMENT '是否并行',
	`IS_UPDATE_DATA` VARCHAR(1) NOT NULL COMMENT '是否更新',
	`REQUESTS_RECOVERY` VARCHAR(1) NOT NULL COMMENT '是否要求唤醒',
	`JOB_DATA` BLOB NULL COMMENT '任务数据',
	PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
)
COMMENT='任务'
ENGINE=InnoDB;

CREATE TABLE QRTZ_TRIGGERS (
	`SCHED_NAME` VARCHAR(120) NOT NULL COMMENT '计划名称',
	`TRIGGER_NAME` VARCHAR(190) NOT NULL COMMENT '触发器名称',
	`TRIGGER_GROUP` VARCHAR(190) NOT NULL COMMENT '触发器组',
	`JOB_NAME` VARCHAR(190) NOT NULL COMMENT '任务名称',
	`JOB_GROUP` VARCHAR(190) NOT NULL COMMENT '任务组',
	`DESCRIPTION` VARCHAR(250) NULL DEFAULT NULL COMMENT '描述',
	`NEXT_FIRE_TIME` BIGINT(13) NULL DEFAULT NULL COMMENT '下次执行时间',
	`PREV_FIRE_TIME` BIGINT(13) NULL DEFAULT NULL COMMENT '上次执行时间',
	`PRIORITY` INT(11) NULL DEFAULT NULL COMMENT '优先级',
	`TRIGGER_STATE` VARCHAR(16) NOT NULL COMMENT '触发器状态',
	`TRIGGER_TYPE` VARCHAR(8) NOT NULL COMMENT '触发器类型',
	`START_TIME` BIGINT(13) NOT NULL COMMENT '开始时间',
	`END_TIME` BIGINT(13) NULL DEFAULT NULL COMMENT '结束时间',
	`CALENDAR_NAME` VARCHAR(190) NULL DEFAULT NULL COMMENT '日历名称',
	`MISFIRE_INSTR` SMALLINT(2) NULL DEFAULT NULL COMMENT '失败次数',
	`JOB_DATA` BLOB NULL COMMENT '任务数据',
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)
)
COMMENT='触发器'
ENGINE=InnoDB;


CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`TRIGGER_NAME` VARCHAR(190) NOT NULL,
	`TRIGGER_GROUP` VARCHAR(190) NOT NULL,
	`REPEAT_COUNT` BIGINT(7) NOT NULL COMMENT '重复次数',
	`REPEAT_INTERVAL` BIGINT(12) NOT NULL COMMENT '触发次数',
	`TIMES_TRIGGERED` BIGINT(10) NOT NULL COMMENT '重复间隔',
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
)
COMMENT='简单触发器'
ENGINE=InnoDB;

CREATE TABLE QRTZ_CRON_TRIGGERS (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`TRIGGER_NAME` VARCHAR(190) NOT NULL,
	`TRIGGER_GROUP` VARCHAR(190) NOT NULL,
	`CRON_EXPRESSION` VARCHAR(120) NOT NULL,
	`TIME_ZONE_ID` VARCHAR(80) NULL DEFAULT NULL,
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
)
COMMENT='CRON类型的触发器'
ENGINE=InnoDB;

CREATE TABLE QRTZ_SIMPROP_TRIGGERS (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`TRIGGER_NAME` VARCHAR(190) NOT NULL,
	`TRIGGER_GROUP` VARCHAR(190) NOT NULL,
	`STR_PROP_1` VARCHAR(512) NULL DEFAULT NULL,
	`STR_PROP_2` VARCHAR(512) NULL DEFAULT NULL,
	`STR_PROP_3` VARCHAR(512) NULL DEFAULT NULL,
	`INT_PROP_1` INT(11) NULL DEFAULT NULL,
	`INT_PROP_2` INT(11) NULL DEFAULT NULL,
	`LONG_PROP_1` BIGINT(20) NULL DEFAULT NULL,
	`LONG_PROP_2` BIGINT(20) NULL DEFAULT NULL,
	`DEC_PROP_1` DECIMAL(13,4) NULL DEFAULT NULL,
	`DEC_PROP_2` DECIMAL(13,4) NULL DEFAULT NULL,
	`BOOL_PROP_1` VARCHAR(1) NULL DEFAULT NULL,
	`BOOL_PROP_2` VARCHAR(1) NULL DEFAULT NULL,
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
)
COMMENT='集群相关'
ENGINE=InnoDB;

CREATE TABLE QRTZ_BLOB_TRIGGERS (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`TRIGGER_NAME` VARCHAR(190) NOT NULL,
	`TRIGGER_GROUP` VARCHAR(190) NOT NULL,
	`BLOB_DATA` BLOB NULL,
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
)
COMMENT='Blob类型的触发器'
ENGINE=InnoDB;

CREATE TABLE QRTZ_CALENDARS (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`CALENDAR_NAME` VARCHAR(190) NOT NULL,
	`CALENDAR` BLOB NOT NULL,
	PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
)
COMMENT='日历信息'
ENGINE=InnoDB;

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`TRIGGER_GROUP` VARCHAR(190) NOT NULL,
	PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
)
COMMENT='暂停的触发器'
ENGINE=InnoDB;

CREATE TABLE QRTZ_FIRED_TRIGGERS (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`ENTRY_ID` VARCHAR(95) NOT NULL,
	`TRIGGER_NAME` VARCHAR(190) NOT NULL,
	`TRIGGER_GROUP` VARCHAR(190) NOT NULL,
	`INSTANCE_NAME` VARCHAR(190) NOT NULL,
	`FIRED_TIME` BIGINT(13) NOT NULL,
	`SCHED_TIME` BIGINT(13) NOT NULL,
	`PRIORITY` INT(11) NOT NULL,
	`STATE` VARCHAR(16) NOT NULL,
	`JOB_NAME` VARCHAR(190) NULL DEFAULT NULL,
	`JOB_GROUP` VARCHAR(190) NULL DEFAULT NULL,
	`IS_NONCONCURRENT` VARCHAR(1) NULL DEFAULT NULL,
	`REQUESTS_RECOVERY` VARCHAR(1) NULL DEFAULT NULL,
	PRIMARY KEY (SCHED_NAME,ENTRY_ID)
)
COMMENT='执行的触发器'
ENGINE=InnoDB;

CREATE TABLE QRTZ_SCHEDULER_STATE (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`INSTANCE_NAME` VARCHAR(190) NOT NULL,
	`LAST_CHECKIN_TIME` BIGINT(13) NOT NULL COMMENT '最后检查时间',
	`CHECKIN_INTERVAL` BIGINT(13) NOT NULL COMMENT '检查间隔',
	PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
)
COMMENT='调度器状态'
ENGINE=InnoDB;

CREATE TABLE QRTZ_LOCKS (
	`SCHED_NAME` VARCHAR(120) NOT NULL,
	`LOCK_NAME` VARCHAR(40) NOT NULL,
	PRIMARY KEY (SCHED_NAME,LOCK_NAME)
)
COMMENT='悲观锁'
ENGINE=InnoDB;

CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);
CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);
CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);

commit;